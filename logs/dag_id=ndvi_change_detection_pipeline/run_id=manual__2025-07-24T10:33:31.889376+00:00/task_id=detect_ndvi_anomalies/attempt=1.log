{"timestamp":"2025-07-24T10:33:33.312597","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-24T10:33:33.313040","level":"info","event":"Filling up the DagBag from /home/user/airflow/dags/my_first_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-24T10:33:33.342377Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-24T10:33:33.342494Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-24T10:33:33.342589Z","level":"info","event":"Current task name:detect_ndvi_anomalies","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-24T10:33:33.342638Z","level":"info","event":"Dag name:ndvi_change_detection_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-24T10:33:33.343993Z","level":"info","event":"Detecting anomalies between /path/to/before.tif and /path/to/after.tif, plot=True","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-24T10:33:33.344049","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-24T10:33:33.357797Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-24T10:33:33.357893Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-24T10:33:33.357994Z","level":"info","event":"Task operator:<Task(PythonOperator): detect_ndvi_anomalies>","chan":"stdout","logger":"task"}
