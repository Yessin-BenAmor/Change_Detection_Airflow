{"timestamp":"2025-07-24T10:33:29.453814","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-24T10:33:29.454205","level":"info","event":"Filling up the DagBag from /home/user/airflow/dags/my_first_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-24T10:33:29.479212Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-24T10:33:29.479287Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-24T10:33:29.479394Z","level":"info","event":"Current task name:get_masked_mean","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-24T10:33:29.479425Z","level":"info","event":"Dag name:ndvi_change_detection_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-24T10:33:29.480498Z","level":"info","event":"Calculating masked mean for /path/to/diff.tif with mask /path/to/mask.tif","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-24T10:33:29.480561","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-24T10:33:29.494017Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-24T10:33:29.494091Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-24T10:33:29.494200Z","level":"info","event":"Task operator:<Task(PythonOperator): get_masked_mean>","chan":"stdout","logger":"task"}
