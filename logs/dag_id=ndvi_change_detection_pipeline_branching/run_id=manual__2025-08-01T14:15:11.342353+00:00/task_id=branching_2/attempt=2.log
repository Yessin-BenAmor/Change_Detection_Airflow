{"timestamp":"2025-08-01T14:26:00.117805","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-01T14:26:00.118248","level":"info","event":"Filling up the DagBag from /home/user/airflow/dags/my_first_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-01T14:26:00.981272Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-01T14:26:00.981451Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-01T14:26:00.981521Z","level":"info","event":"Current task name:branching_2","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-01T14:26:00.981552Z","level":"info","event":"Dag name:ndvi_change_detection_pipeline_branching","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-01T14:26:00.996908Z","level":"info","event":"Difference in days: 0","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-01T14:26:01.009710Z","level":"info","event":"SOG dates are within 7 days. Continuing to 'anomalies_path'.","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-01T14:26:01.009961","level":"info","event":"Done. Returned value was: anomalies_path","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-08-01T14:26:01.010106","level":"info","event":"Branch into anomalies_path","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-08-01T14:26:01.010428","level":"info","event":"Following branch {'anomalies_path'}","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-08-01T14:26:01.010662","level":"info","event":"Skipping tasks [('find_simulated_dates', -1)]","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-08-01T14:26:01.023500","level":"info","event":"Skipping downstream tasks.","logger":"task"}
{"timestamp":"2025-08-01T14:26:01.055736Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-01T14:26:01.055928Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-01T14:26:01.056277Z","level":"info","event":"Task operator:<Task(BranchPythonOperator): branching_2>","chan":"stdout","logger":"task"}
