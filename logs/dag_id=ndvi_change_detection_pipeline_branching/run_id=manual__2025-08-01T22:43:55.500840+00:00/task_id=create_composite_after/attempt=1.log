{"timestamp":"2025-08-01T22:45:54.593557","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-01T22:45:54.594129","level":"info","event":"Filling up the DagBag from /home/user/airflow/dags/my_first_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-01T22:45:55.402355Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-01T22:45:55.402479Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-01T22:45:55.402614Z","level":"info","event":"Current task name:create_composite_after","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-01T22:45:55.402666Z","level":"info","event":"Dag name:ndvi_change_detection_pipeline_branching","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-01T22:45:55.403611Z","level":"info","event":"Creating composite after wrapper...","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-01T22:45:55.410120Z","level":"info","event":"Date string from XCom for after composite: 2025-01-09","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-01T22:45:55.416572Z","level":"info","event":"TTTTTTTTTTTTTTTTTTTTTTTMask array shape: (76, 80)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-01T22:45:55.425661Z","level":"info","event":"Composite image created at: /home/user/airflow/output/composite_after.tif","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-01T22:45:55.426054","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-08-01T22:45:55.442105Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-01T22:45:55.442236Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-01T22:45:55.442303Z","level":"info","event":"Task operator:<Task(PythonOperator): create_composite_after>","chan":"stdout","logger":"task"}
