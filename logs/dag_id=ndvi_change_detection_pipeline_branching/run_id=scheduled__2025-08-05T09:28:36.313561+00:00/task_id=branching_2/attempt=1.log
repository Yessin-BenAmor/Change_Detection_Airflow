{"timestamp":"2025-08-05T09:32:26.808924","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-05T09:32:26.809359","level":"info","event":"Filling up the DagBag from /home/user/airflow/dags/my_first_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-05T09:32:27.526429Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-05T09:32:27.526539Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-05T09:32:27.526712Z","level":"info","event":"Current task name:branching_2","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-05T09:32:27.526812Z","level":"info","event":"Dag name:ndvi_change_detection_pipeline_branching","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-05T09:32:27.539641Z","level":"info","event":"Difference in days: 0","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-05T09:32:27.550858Z","level":"info","event":"SOG dates are within 7 days. Continuing to 'anomalies_path'.","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-05T09:32:27.551059","level":"info","event":"Done. Returned value was: early_anomalies_path","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-08-05T09:32:27.551188","level":"info","event":"Branch into early_anomalies_path","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-08-05T09:32:27.551401","level":"info","event":"Following branch {'early_anomalies_path'}","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-08-05T09:32:27.551600","level":"info","event":"Skipping tasks [('find_simulated_dates', -1)]","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-08-05T09:32:27.561989","level":"info","event":"Skipping downstream tasks.","logger":"task"}
{"timestamp":"2025-08-05T09:32:27.583823Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-05T09:32:27.583933Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-05T09:32:27.584092Z","level":"info","event":"Task operator:<Task(BranchPythonOperator): branching_2>","chan":"stdout","logger":"task"}
