{"timestamp":"2025-08-01T15:03:25.188143","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-01T15:03:25.188616","level":"info","event":"Filling up the DagBag from /home/user/airflow/dags/my_first_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-01T15:03:26.017367Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-01T15:03:26.017499Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-01T15:03:26.017563Z","level":"info","event":"Current task name:branching_2","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-01T15:03:26.017590Z","level":"info","event":"Dag name:ndvi_change_detection_pipeline_branching","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-01T15:03:26.031821Z","level":"info","event":"Difference in days: 13","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-01T15:03:26.046326Z","level":"info","event":"SOG dates are within 7 days. Continuing to 'anomalies_path'.","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-01T15:03:26.046760","level":"info","event":"Done. Returned value was: anomalies_path","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-08-01T15:03:26.046913","level":"info","event":"Branch into anomalies_path","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-08-01T15:03:26.047149","level":"info","event":"Following branch {'anomalies_path'}","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-08-01T15:03:26.047370","level":"info","event":"Skipping tasks [('find_simulated_dates', -1)]","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-08-01T15:03:26.062634","level":"info","event":"Skipping downstream tasks.","logger":"task"}
{"timestamp":"2025-08-01T15:03:26.100316Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-01T15:03:26.100424Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-01T15:03:26.100545Z","level":"info","event":"Task operator:<Task(BranchPythonOperator): branching_2>","chan":"stdout","logger":"task"}
