{"timestamp":"2025-07-30T09:32:04.227030","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-30T09:32:04.227495","level":"info","event":"Filling up the DagBag from /home/user/airflow/dags/my_first_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-30T09:32:05.072530Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-30T09:32:05.072652Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-30T09:32:05.072794Z","level":"info","event":"Current task name:detect_SOG_date_both","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-30T09:32:05.072848Z","level":"info","event":"Dag name:ndvi_change_detection_pipeline_branching","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-30T09:32:05.162044Z","level":"info","event":"NDVI first change point date: 2025-03-10 00:00:00","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-30T09:32:05.163497Z","level":"info","event":"NDVI first change point date: 2025-03-10 00:00:00","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-30T09:32:05.163600Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-30T09:32:05.163639Z","level":"info","event":"SOG date for negative anomalies mask: 2025-03-10 00:00:00","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-30T09:32:05.163675Z","level":"info","event":"SOG date for normal mask: 2025-03-10 00:00:00","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-30T09:32:05.190681","level":"info","event":"Done. Returned value was: (Timestamp('2025-03-10 00:00:00'), Timestamp('2025-03-10 00:00:00'))","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-30T09:32:05.190953","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01985aab-a38f-7251-ab1c-f8fcb41b9dea'), task_id='detect_SOG_date_both', dag_id='ndvi_change_detection_pipeline_branching', run_id='manual__2025-07-30T09:30:54.713629+00:00', try_number=1, map_index=-1, hostname='DESKTOP-H7QUGA8.', context_carrier=None, task=<Task(PythonOperator): detect_SOG_date_both>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 30, 9, 32, 4, 198568, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/ndvi_change_detection_pipeline_branching/runs/manual__2025-07-30T09%3A30%3A54.713629%2B00%3A00/tasks/detect_SOG_date_both?try_number=1')","logger":"task"}
{"timestamp":"2025-07-30T09:32:05.191180","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"TypeError","exc_value":"cannot serialize object of type <class 'pandas._libs.tslibs.timestamps.Timestamp'>","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/user/airflow_venv_clean/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":888,"name":"run"},{"filename":"/home/user/airflow_venv_clean/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1227,"name":"_push_xcom_if_needed"},{"filename":"/home/user/airflow_venv_clean/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":533,"name":"_xcom_push"},{"filename":"/home/user/airflow_venv_clean/lib/python3.12/site-packages/airflow/sdk/bases/xcom.py","lineno":71,"name":"set"},{"filename":"/home/user/airflow_venv_clean/lib/python3.12/site-packages/airflow/sdk/bases/xcom.py","lineno":329,"name":"serialize_value"},{"filename":"/home/user/airflow_venv_clean/lib/python3.12/site-packages/airflow/serialization/serde.py","lineno":152,"name":"serialize"},{"filename":"/home/user/airflow_venv_clean/lib/python3.12/site-packages/airflow/serialization/serde.py","lineno":129,"name":"serialize"},{"filename":"/home/user/airflow_venv_clean/lib/python3.12/site-packages/airflow/serialization/serde.py","lineno":185,"name":"serialize"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-07-30T09:32:05.191879Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-30T09:32:05.192081Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-30T09:32:05.192149Z","level":"info","event":"Task:<Task(PythonOperator): detect_SOG_date_both>","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-30T09:32:05.192218Z","level":"info","event":"Failure caused by cannot serialize object of type <class 'pandas._libs.tslibs.timestamps.Timestamp'>","chan":"stdout","logger":"task"}
