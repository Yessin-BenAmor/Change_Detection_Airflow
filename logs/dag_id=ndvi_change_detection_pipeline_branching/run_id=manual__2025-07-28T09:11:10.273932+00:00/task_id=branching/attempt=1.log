{"timestamp":"2025-07-28T09:11:15.778647","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-28T09:11:15.779058","level":"info","event":"Filling up the DagBag from /home/user/airflow/dags/my_first_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-28T09:11:16.287331Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-28T09:11:16.287486Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-28T09:11:16.287566Z","level":"info","event":"Current task name:branching","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-28T09:11:16.287594Z","level":"info","event":"Dag name:ndvi_change_detection_pipeline_branching","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-28T09:11:16.295280","level":"info","event":"Done. Returned value was: no_anomalies_path","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-07-28T09:11:16.295395","level":"info","event":"Branch into no_anomalies_path","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-07-28T09:11:16.295561","level":"info","event":"Following branch {'no_anomalies_path'}","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-07-28T09:11:16.295849","level":"info","event":"Skipping tasks [('get_masked_mean', -1)]","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-07-28T09:11:16.309373","level":"info","event":"Skipping downstream tasks.","logger":"task"}
{"timestamp":"2025-07-28T09:11:16.336241Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-28T09:11:16.336340Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-28T09:11:16.336563Z","level":"info","event":"Task operator:<Task(BranchPythonOperator): branching>","chan":"stdout","logger":"task"}
