{"timestamp":"2025-07-28T09:25:24.759744","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-28T09:25:24.760245","level":"info","event":"Filling up the DagBag from /home/user/airflow/dags/my_first_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-28T09:25:25.267999Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-28T09:25:25.268098Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-28T09:25:25.268221Z","level":"info","event":"Current task name:branching","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-28T09:25:25.268256Z","level":"info","event":"Dag name:ndvi_change_detection_pipeline_branching","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-28T09:25:25.277524","level":"info","event":"Done. Returned value was: no_anomalies_path","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-07-28T09:25:25.277730","level":"info","event":"Branch into no_anomalies_path","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-07-28T09:25:25.277934","level":"info","event":"Following branch {'no_anomalies_path'}","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-07-28T09:25:25.278235","level":"info","event":"Skipping tasks [('get_masked_mean', -1)]","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-07-28T09:25:25.290450","level":"info","event":"Skipping downstream tasks.","logger":"task"}
{"timestamp":"2025-07-28T09:25:25.317695Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-28T09:25:25.317796Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-28T09:25:25.317905Z","level":"info","event":"Task operator:<Task(BranchPythonOperator): branching>","chan":"stdout","logger":"task"}
