{"timestamp":"2025-07-29T16:19:09.908180","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-29T16:19:09.908634","level":"info","event":"Filling up the DagBag from /home/user/airflow/dags/my_first_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-29T16:19:10.632708Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T16:19:10.632838Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T16:19:10.632934Z","level":"info","event":"Current task name:branching","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T16:19:10.632968Z","level":"info","event":"Dag name:ndvi_change_detection_pipeline_branching","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T16:19:10.641700","level":"info","event":"Done. Returned value was: init_ee","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-07-29T16:19:10.641839","level":"info","event":"Branch into init_ee","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-07-29T16:19:10.642037","level":"info","event":"Following branch {'init_ee'}","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-07-29T16:19:10.642339","level":"info","event":"Skipping tasks [('no_anomalies_path', -1)]","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-07-29T16:19:10.652423","level":"info","event":"Skipping downstream tasks.","logger":"task"}
{"timestamp":"2025-07-29T16:19:10.677333Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T16:19:10.677459Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T16:19:10.677578Z","level":"info","event":"Task operator:<Task(BranchPythonOperator): branching>","chan":"stdout","logger":"task"}
